//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WMS
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class WMSEntities : DbContext
    {
        public WMSEntities()
            : base("name=WMSEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Chapter> Chapters { get; set; }
        public virtual DbSet<Publisher> Publishers { get; set; }
        public virtual DbSet<Tbl_MenuList> Tbl_MenuList { get; set; }
        public virtual DbSet<UserMaster> UserMasters { get; set; }
        public virtual DbSet<Holiday> Holidays { get; set; }
        public virtual DbSet<Tbl_ActivityInfo> Tbl_ActivityInfo { get; set; }
        public virtual DbSet<TBL_ArchiveRestore> TBL_ArchiveRestore { get; set; }
        public virtual DbSet<TBL_BookStages> TBL_BookStages { get; set; }
        public virtual DbSet<TBL_Category> TBL_Category { get; set; }
        public virtual DbSet<TBL_Cities> TBL_Cities { get; set; }
        public virtual DbSet<TBL_Complexity> TBL_Complexity { get; set; }
        public virtual DbSet<TBL_Countries> TBL_Countries { get; set; }
        public virtual DbSet<TBL_Edition> TBL_Edition { get; set; }
        public virtual DbSet<Tbl_Feedback> Tbl_Feedback { get; set; }
        public virtual DbSet<Tbl_ForgotPassword> Tbl_ForgotPassword { get; set; }
        public virtual DbSet<TBL_FreelanceBooking> TBL_FreelanceBooking { get; set; }
        public virtual DbSet<TBL_FreelanceBooks> TBL_FreelanceBooks { get; set; }
        public virtual DbSet<TBL_Freelancer_Master> TBL_Freelancer_Master { get; set; }
        public virtual DbSet<TBL_Freelancer_Task> TBL_Freelancer_Task { get; set; }
        public virtual DbSet<TBL_Freelancer_TaskPrice> TBL_Freelancer_TaskPrice { get; set; }
        public virtual DbSet<TBL_FreelanceSubMaster> TBL_FreelanceSubMaster { get; set; }
        public virtual DbSet<Tbl_ftpDetails> Tbl_ftpDetails { get; set; }
        public virtual DbSet<Tbl_HelpDesk> Tbl_HelpDesk { get; set; }
        public virtual DbSet<Tbl_HelpdeskComment> Tbl_HelpdeskComment { get; set; }
        public virtual DbSet<TBL_History> TBL_History { get; set; }
        public virtual DbSet<Tbl_Instruction> Tbl_Instruction { get; set; }
        public virtual DbSet<TBL_Invoice> TBL_Invoice { get; set; }
        public virtual DbSet<TBL_Languages> TBL_Languages { get; set; }
        public virtual DbSet<TBL_LoginHistory> TBL_LoginHistory { get; set; }
        public virtual DbSet<TBL_MailTemplate> TBL_MailTemplate { get; set; }
        public virtual DbSet<TBL_MainMaster> TBL_MainMaster { get; set; }
        public virtual DbSet<Tbl_OOFHistory> Tbl_OOFHistory { get; set; }
        public virtual DbSet<TBL_Pipeline> TBL_Pipeline { get; set; }
        public virtual DbSet<TBL_Platform> TBL_Platform { get; set; }
        public virtual DbSet<TBL_PriceGrid> TBL_PriceGrid { get; set; }
        public virtual DbSet<TBL_Process> TBL_Process { get; set; }
        public virtual DbSet<TBL_ProcessType> TBL_ProcessType { get; set; }
        public virtual DbSet<TBL_ProjectAnalysis_CMTS> TBL_ProjectAnalysis_CMTS { get; set; }
        public virtual DbSet<TBL_ProjectPlanning> TBL_ProjectPlanning { get; set; }
        public virtual DbSet<TBL_ProjectPlanning_Flow> TBL_ProjectPlanning_Flow { get; set; }
        public virtual DbSet<TBL_ProofDistribution> TBL_ProofDistribution { get; set; }
        public virtual DbSet<TBL_ProofDistribution_History> TBL_ProofDistribution_History { get; set; }
        public virtual DbSet<TBL_ProofEmail> TBL_ProofEmail { get; set; }
        public virtual DbSet<TBL_QueryMaster> TBL_QueryMaster { get; set; }
        public virtual DbSet<TBL_QuerySubMaster> TBL_QuerySubMaster { get; set; }
        public virtual DbSet<TBL_QueryTemplate> TBL_QueryTemplate { get; set; }
        public virtual DbSet<tbl_RoleMenuAction> tbl_RoleMenuAction { get; set; }
        public virtual DbSet<TBL_Signaldetails> TBL_Signaldetails { get; set; }
        public virtual DbSet<TBL_SignalDetails_FromClient> TBL_SignalDetails_FromClient { get; set; }
        public virtual DbSet<TBL_SourceList> TBL_SourceList { get; set; }
        public virtual DbSet<TBL_States> TBL_States { get; set; }
        public virtual DbSet<TBL_Subject> TBL_Subject { get; set; }
        public virtual DbSet<TBL_SubMaster> TBL_SubMaster { get; set; }
        public virtual DbSet<TBL_Survey> TBL_Survey { get; set; }
        public virtual DbSet<Tbl_TaskCalendar> Tbl_TaskCalendar { get; set; }
        public virtual DbSet<TBL_UnitType> TBL_UnitType { get; set; }
        public virtual DbSet<TBL_UserAccess_PublisherList> TBL_UserAccess_PublisherList { get; set; }
        public virtual DbSet<TBL_WEBAPI_Log> TBL_WEBAPI_Log { get; set; }
        public virtual DbSet<TBL_WEBAPI_UsersList> TBL_WEBAPI_UsersList { get; set; }
        public virtual DbSet<TBL_WorkFlowActivities> TBL_WorkFlowActivities { get; set; }
        public virtual DbSet<TBL_WorkFlowList> TBL_WorkFlowList { get; set; }
        public virtual DbSet<TBL_WorkFlowMaster> TBL_WorkFlowMaster { get; set; }
        public virtual DbSet<UserType> UserTypes { get; set; }
        public virtual DbSet<Books_JTS> Books_JTS { get; set; }
        public virtual DbSet<Chapter_JTS> Chapter_JTS { get; set; }
        public virtual DbSet<Scheduler> Schedulers { get; set; }
        public virtual DbSet<Book> Books { get; set; }
        public virtual DbSet<Tbl_RoleMaster> Tbl_RoleMaster { get; set; }
        public virtual DbSet<tbl_errorLog> tbl_errorLog { get; set; }
        public virtual DbSet<TBL_ProjectAnalysis> TBL_ProjectAnalysis { get; set; }
    
        public virtual ObjectResult<SP_AE_Allocate_History_Result> SP_AE_Allocate_History(Nullable<int> loginID, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string filterType)
        {
            var loginIDParameter = loginID.HasValue ?
                new ObjectParameter("LoginID", loginID) :
                new ObjectParameter("LoginID", typeof(int));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var filterTypeParameter = filterType != null ?
                new ObjectParameter("FilterType", filterType) :
                new ObjectParameter("FilterType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_AE_Allocate_History_Result>("SP_AE_Allocate_History", loginIDParameter, fromDateParameter, toDateParameter, filterTypeParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SP_CreateUSERID_Freelancer(Nullable<int> freelancerID, string loginName, string emailID, string password, Nullable<int> updatedBy)
        {
            var freelancerIDParameter = freelancerID.HasValue ?
                new ObjectParameter("FreelancerID", freelancerID) :
                new ObjectParameter("FreelancerID", typeof(int));
    
            var loginNameParameter = loginName != null ?
                new ObjectParameter("LoginName", loginName) :
                new ObjectParameter("LoginName", typeof(string));
    
            var emailIDParameter = emailID != null ?
                new ObjectParameter("EmailID", emailID) :
                new ObjectParameter("EmailID", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var updatedByParameter = updatedBy.HasValue ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_CreateUSERID_Freelancer", freelancerIDParameter, loginNameParameter, emailIDParameter, passwordParameter, updatedByParameter);
        }
    
        public virtual ObjectResult<SP_Freelancer_Allocate_Hisotry_Result> SP_Freelancer_Allocate_Hisotry(Nullable<int> loginID, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string filterType)
        {
            var loginIDParameter = loginID.HasValue ?
                new ObjectParameter("LoginID", loginID) :
                new ObjectParameter("LoginID", typeof(int));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var filterTypeParameter = filterType != null ?
                new ObjectParameter("FilterType", filterType) :
                new ObjectParameter("FilterType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Freelancer_Allocate_Hisotry_Result>("SP_Freelancer_Allocate_Hisotry", loginIDParameter, fromDateParameter, toDateParameter, filterTypeParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SP_Freelancer_Master_AddUpdate(Nullable<int> iD, string name, Nullable<System.DateTime> dOB, string available, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string gender, string address, Nullable<int> countryID, Nullable<int> stateID, Nullable<int> cityID, string pincode, string emailID, string emailID1, string skypeId, string mobileNo, string specialization, string performanceRecord, string bankName, string accountNo, string iFSCCode, string branchName, string nDADocument, string pANCard, string publisherList, string language, string source, string interest, string restriction, Nullable<byte> isActive, string image, string remarks, Nullable<int> updatedBy)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var dOBParameter = dOB.HasValue ?
                new ObjectParameter("DOB", dOB) :
                new ObjectParameter("DOB", typeof(System.DateTime));
    
            var availableParameter = available != null ?
                new ObjectParameter("Available", available) :
                new ObjectParameter("Available", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var genderParameter = gender != null ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var countryIDParameter = countryID.HasValue ?
                new ObjectParameter("CountryID", countryID) :
                new ObjectParameter("CountryID", typeof(int));
    
            var stateIDParameter = stateID.HasValue ?
                new ObjectParameter("StateID", stateID) :
                new ObjectParameter("StateID", typeof(int));
    
            var cityIDParameter = cityID.HasValue ?
                new ObjectParameter("CityID", cityID) :
                new ObjectParameter("CityID", typeof(int));
    
            var pincodeParameter = pincode != null ?
                new ObjectParameter("Pincode", pincode) :
                new ObjectParameter("Pincode", typeof(string));
    
            var emailIDParameter = emailID != null ?
                new ObjectParameter("EmailID", emailID) :
                new ObjectParameter("EmailID", typeof(string));
    
            var emailID1Parameter = emailID1 != null ?
                new ObjectParameter("EmailID1", emailID1) :
                new ObjectParameter("EmailID1", typeof(string));
    
            var skypeIdParameter = skypeId != null ?
                new ObjectParameter("SkypeId", skypeId) :
                new ObjectParameter("SkypeId", typeof(string));
    
            var mobileNoParameter = mobileNo != null ?
                new ObjectParameter("MobileNo", mobileNo) :
                new ObjectParameter("MobileNo", typeof(string));
    
            var specializationParameter = specialization != null ?
                new ObjectParameter("Specialization", specialization) :
                new ObjectParameter("Specialization", typeof(string));
    
            var performanceRecordParameter = performanceRecord != null ?
                new ObjectParameter("PerformanceRecord", performanceRecord) :
                new ObjectParameter("PerformanceRecord", typeof(string));
    
            var bankNameParameter = bankName != null ?
                new ObjectParameter("BankName", bankName) :
                new ObjectParameter("BankName", typeof(string));
    
            var accountNoParameter = accountNo != null ?
                new ObjectParameter("AccountNo", accountNo) :
                new ObjectParameter("AccountNo", typeof(string));
    
            var iFSCCodeParameter = iFSCCode != null ?
                new ObjectParameter("IFSCCode", iFSCCode) :
                new ObjectParameter("IFSCCode", typeof(string));
    
            var branchNameParameter = branchName != null ?
                new ObjectParameter("BranchName", branchName) :
                new ObjectParameter("BranchName", typeof(string));
    
            var nDADocumentParameter = nDADocument != null ?
                new ObjectParameter("NDADocument", nDADocument) :
                new ObjectParameter("NDADocument", typeof(string));
    
            var pANCardParameter = pANCard != null ?
                new ObjectParameter("PANCard", pANCard) :
                new ObjectParameter("PANCard", typeof(string));
    
            var publisherListParameter = publisherList != null ?
                new ObjectParameter("PublisherList", publisherList) :
                new ObjectParameter("PublisherList", typeof(string));
    
            var languageParameter = language != null ?
                new ObjectParameter("Language", language) :
                new ObjectParameter("Language", typeof(string));
    
            var sourceParameter = source != null ?
                new ObjectParameter("Source", source) :
                new ObjectParameter("Source", typeof(string));
    
            var interestParameter = interest != null ?
                new ObjectParameter("Interest", interest) :
                new ObjectParameter("Interest", typeof(string));
    
            var restrictionParameter = restriction != null ?
                new ObjectParameter("Restriction", restriction) :
                new ObjectParameter("Restriction", typeof(string));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(byte));
    
            var imageParameter = image != null ?
                new ObjectParameter("Image", image) :
                new ObjectParameter("Image", typeof(string));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("Remarks", remarks) :
                new ObjectParameter("Remarks", typeof(string));
    
            var updatedByParameter = updatedBy.HasValue ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_Freelancer_Master_AddUpdate", iDParameter, nameParameter, dOBParameter, availableParameter, fromDateParameter, toDateParameter, genderParameter, addressParameter, countryIDParameter, stateIDParameter, cityIDParameter, pincodeParameter, emailIDParameter, emailID1Parameter, skypeIdParameter, mobileNoParameter, specializationParameter, performanceRecordParameter, bankNameParameter, accountNoParameter, iFSCCodeParameter, branchNameParameter, nDADocumentParameter, pANCardParameter, publisherListParameter, languageParameter, sourceParameter, interestParameter, restrictionParameter, isActiveParameter, imageParameter, remarksParameter, updatedByParameter);
        }
    
        public virtual ObjectResult<SP_FreelancerBooking_List_Result> SP_FreelancerBooking_List(Nullable<int> taskID)
        {
            var taskIDParameter = taskID.HasValue ?
                new ObjectParameter("TaskID", taskID) :
                new ObjectParameter("TaskID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_FreelancerBooking_List_Result>("SP_FreelancerBooking_List", taskIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SP_FreelanceSubMaster_AddUpdate(Nullable<int> mainID, Nullable<int> taskID, string number, Nullable<int> freelancerID, Nullable<int> mSPages, Nullable<int> typesetPages, Nullable<int> totalPages, Nullable<int> totalWords, Nullable<int> totalTables, Nullable<int> totalFigures, Nullable<System.DateTime> dueDate, string fileName, Nullable<int> updatedBy)
        {
            var mainIDParameter = mainID.HasValue ?
                new ObjectParameter("MainID", mainID) :
                new ObjectParameter("MainID", typeof(int));
    
            var taskIDParameter = taskID.HasValue ?
                new ObjectParameter("TaskID", taskID) :
                new ObjectParameter("TaskID", typeof(int));
    
            var numberParameter = number != null ?
                new ObjectParameter("Number", number) :
                new ObjectParameter("Number", typeof(string));
    
            var freelancerIDParameter = freelancerID.HasValue ?
                new ObjectParameter("FreelancerID", freelancerID) :
                new ObjectParameter("FreelancerID", typeof(int));
    
            var mSPagesParameter = mSPages.HasValue ?
                new ObjectParameter("MSPages", mSPages) :
                new ObjectParameter("MSPages", typeof(int));
    
            var typesetPagesParameter = typesetPages.HasValue ?
                new ObjectParameter("TypesetPages", typesetPages) :
                new ObjectParameter("TypesetPages", typeof(int));
    
            var totalPagesParameter = totalPages.HasValue ?
                new ObjectParameter("TotalPages", totalPages) :
                new ObjectParameter("TotalPages", typeof(int));
    
            var totalWordsParameter = totalWords.HasValue ?
                new ObjectParameter("TotalWords", totalWords) :
                new ObjectParameter("TotalWords", typeof(int));
    
            var totalTablesParameter = totalTables.HasValue ?
                new ObjectParameter("TotalTables", totalTables) :
                new ObjectParameter("TotalTables", typeof(int));
    
            var totalFiguresParameter = totalFigures.HasValue ?
                new ObjectParameter("TotalFigures", totalFigures) :
                new ObjectParameter("TotalFigures", typeof(int));
    
            var dueDateParameter = dueDate.HasValue ?
                new ObjectParameter("DueDate", dueDate) :
                new ObjectParameter("DueDate", typeof(System.DateTime));
    
            var fileNameParameter = fileName != null ?
                new ObjectParameter("FileName", fileName) :
                new ObjectParameter("FileName", typeof(string));
    
            var updatedByParameter = updatedBy.HasValue ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_FreelanceSubMaster_AddUpdate", mainIDParameter, taskIDParameter, numberParameter, freelancerIDParameter, mSPagesParameter, typesetPagesParameter, totalPagesParameter, totalWordsParameter, totalTablesParameter, totalFiguresParameter, dueDateParameter, fileNameParameter, updatedByParameter);
        }
    
        public virtual ObjectResult<SP_GetActivitiesWise_BooksSummary_Result> SP_GetActivitiesWise_BooksSummary(Nullable<int> loginID)
        {
            var loginIDParameter = loginID.HasValue ?
                new ObjectParameter("LoginID", loginID) :
                new ObjectParameter("LoginID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetActivitiesWise_BooksSummary_Result>("SP_GetActivitiesWise_BooksSummary", loginIDParameter);
        }
    
        public virtual ObjectResult<SP_GetActivity_MilestoneList_Result> SP_GetActivity_MilestoneList(Nullable<int> loginID)
        {
            var loginIDParameter = loginID.HasValue ?
                new ObjectParameter("LoginID", loginID) :
                new ObjectParameter("LoginID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetActivity_MilestoneList_Result>("SP_GetActivity_MilestoneList", loginIDParameter);
        }
    
        public virtual ObjectResult<SP_GetActivityList_ProjectPlan_Result> SP_GetActivityList_ProjectPlan(Nullable<int> workFlowID, Nullable<int> bookID, Nullable<int> bufferDays)
        {
            var workFlowIDParameter = workFlowID.HasValue ?
                new ObjectParameter("WorkFlowID", workFlowID) :
                new ObjectParameter("WorkFlowID", typeof(int));
    
            var bookIDParameter = bookID.HasValue ?
                new ObjectParameter("BookID", bookID) :
                new ObjectParameter("BookID", typeof(int));
    
            var bufferDaysParameter = bufferDays.HasValue ?
                new ObjectParameter("BufferDays", bufferDays) :
                new ObjectParameter("BufferDays", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetActivityList_ProjectPlan_Result>("SP_GetActivityList_ProjectPlan", workFlowIDParameter, bookIDParameter, bufferDaysParameter);
        }
    
        public virtual ObjectResult<SP_GetAllFreelancerbyTaskID_Result> SP_GetAllFreelancerbyTaskID(Nullable<int> bookID, Nullable<int> taskID)
        {
            var bookIDParameter = bookID.HasValue ?
                new ObjectParameter("BookID", bookID) :
                new ObjectParameter("BookID", typeof(int));
    
            var taskIDParameter = taskID.HasValue ?
                new ObjectParameter("TaskID", taskID) :
                new ObjectParameter("TaskID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetAllFreelancerbyTaskID_Result>("SP_GetAllFreelancerbyTaskID", bookIDParameter, taskIDParameter);
        }
    
        public virtual ObjectResult<SP_GetArchivalRestoreRpt_Result> SP_GetArchivalRestoreRpt(Nullable<int> loginID)
        {
            var loginIDParameter = loginID.HasValue ?
                new ObjectParameter("LoginID", loginID) :
                new ObjectParameter("LoginID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetArchivalRestoreRpt_Result>("SP_GetArchivalRestoreRpt", loginIDParameter);
        }
    
        public virtual ObjectResult<SP_GetBookChapterList_AU_ED_FileView_Result> SP_GetBookChapterList_AU_ED_FileView(Nullable<int> bookID, string stage, Nullable<int> loginID)
        {
            var bookIDParameter = bookID.HasValue ?
                new ObjectParameter("BookID", bookID) :
                new ObjectParameter("BookID", typeof(int));
    
            var stageParameter = stage != null ?
                new ObjectParameter("Stage", stage) :
                new ObjectParameter("Stage", typeof(string));
    
            var loginIDParameter = loginID.HasValue ?
                new ObjectParameter("LoginID", loginID) :
                new ObjectParameter("LoginID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetBookChapterList_AU_ED_FileView_Result>("SP_GetBookChapterList_AU_ED_FileView", bookIDParameter, stageParameter, loginIDParameter);
        }
    
        public virtual ObjectResult<SP_GetBookChapterList_AU_ED_Tracking_Result> SP_GetBookChapterList_AU_ED_Tracking(Nullable<int> bookID, string stage, Nullable<int> loginID)
        {
            var bookIDParameter = bookID.HasValue ?
                new ObjectParameter("BookID", bookID) :
                new ObjectParameter("BookID", typeof(int));
    
            var stageParameter = stage != null ?
                new ObjectParameter("Stage", stage) :
                new ObjectParameter("Stage", typeof(string));
    
            var loginIDParameter = loginID.HasValue ?
                new ObjectParameter("LoginID", loginID) :
                new ObjectParameter("LoginID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetBookChapterList_AU_ED_Tracking_Result>("SP_GetBookChapterList_AU_ED_Tracking", bookIDParameter, stageParameter, loginIDParameter);
        }
    
        public virtual ObjectResult<SP_GetBookData_Result> SP_GetBookData(Nullable<int> loginID, string type, string callType)
        {
            var loginIDParameter = loginID.HasValue ?
                new ObjectParameter("LoginID", loginID) :
                new ObjectParameter("LoginID", typeof(int));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var callTypeParameter = callType != null ?
                new ObjectParameter("CallType", callType) :
                new ObjectParameter("CallType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetBookData_Result>("SP_GetBookData", loginIDParameter, typeParameter, callTypeParameter);
        }
    
        public virtual ObjectResult<SP_GetBookDataByArchival_Result> SP_GetBookDataByArchival(Nullable<int> loginID, string type)
        {
            var loginIDParameter = loginID.HasValue ?
                new ObjectParameter("LoginID", loginID) :
                new ObjectParameter("LoginID", typeof(int));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetBookDataByArchival_Result>("SP_GetBookDataByArchival", loginIDParameter, typeParameter);
        }
    
        public virtual ObjectResult<SP_GetBookDataByBilling_Result> SP_GetBookDataByBilling(Nullable<int> loginID, string type)
        {
            var loginIDParameter = loginID.HasValue ?
                new ObjectParameter("LoginID", loginID) :
                new ObjectParameter("LoginID", typeof(int));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetBookDataByBilling_Result>("SP_GetBookDataByBilling", loginIDParameter, typeParameter);
        }
    
        public virtual ObjectResult<SP_GetBookDataforPA_Result> SP_GetBookDataforPA(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetBookDataforPA_Result>("SP_GetBookDataforPA", iDParameter);
        }
    
        public virtual ObjectResult<SP_GetBookDetails_Result> SP_GetBookDetails(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetBookDetails_Result>("SP_GetBookDetails", iDParameter);
        }
    
        public virtual ObjectResult<SP_GetBookDetails_ProjectPlan_DateList_Result> SP_GetBookDetails_ProjectPlan_DateList(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetBookDetails_ProjectPlan_DateList_Result>("SP_GetBookDetails_ProjectPlan_DateList", iDParameter);
        }
    
        public virtual ObjectResult<SP_GetBookDetailsbyCatalog_Result> SP_GetBookDetailsbyCatalog(string catalog)
        {
            var catalogParameter = catalog != null ?
                new ObjectParameter("Catalog", catalog) :
                new ObjectParameter("Catalog", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetBookDetailsbyCatalog_Result>("SP_GetBookDetailsbyCatalog", catalogParameter);
        }
    
        public virtual ObjectResult<SP_GetBookList_Result> SP_GetBookList(Nullable<int> publisherID, string pMName)
        {
            var publisherIDParameter = publisherID.HasValue ?
                new ObjectParameter("PublisherID", publisherID) :
                new ObjectParameter("PublisherID", typeof(int));
    
            var pMNameParameter = pMName != null ?
                new ObjectParameter("PMName", pMName) :
                new ObjectParameter("PMName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetBookList_Result>("SP_GetBookList", publisherIDParameter, pMNameParameter);
        }
    
        public virtual ObjectResult<SP_GetBookList_AU_ED_Tracking_Result> SP_GetBookList_AU_ED_Tracking(Nullable<int> loginID)
        {
            var loginIDParameter = loginID.HasValue ?
                new ObjectParameter("LoginID", loginID) :
                new ObjectParameter("LoginID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetBookList_AU_ED_Tracking_Result>("SP_GetBookList_AU_ED_Tracking", loginIDParameter);
        }
    
        public virtual ObjectResult<SP_GetBookList_AU_ED_Tracking_Status_Result> SP_GetBookList_AU_ED_Tracking_Status(Nullable<int> loginID)
        {
            var loginIDParameter = loginID.HasValue ?
                new ObjectParameter("LoginID", loginID) :
                new ObjectParameter("LoginID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetBookList_AU_ED_Tracking_Status_Result>("SP_GetBookList_AU_ED_Tracking_Status", loginIDParameter);
        }
    
        public virtual ObjectResult<SP_GetBookList_For_PA_Result> SP_GetBookList_For_PA(Nullable<int> loginID, string type)
        {
            var loginIDParameter = loginID.HasValue ?
                new ObjectParameter("LoginID", loginID) :
                new ObjectParameter("LoginID", typeof(int));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetBookList_For_PA_Result>("SP_GetBookList_For_PA", loginIDParameter, typeParameter);
        }
    
        public virtual ObjectResult<SP_GetBookList_ManagerTracking_Result> SP_GetBookList_ManagerTracking(Nullable<int> loginID)
        {
            var loginIDParameter = loginID.HasValue ?
                new ObjectParameter("LoginID", loginID) :
                new ObjectParameter("LoginID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetBookList_ManagerTracking_Result>("SP_GetBookList_ManagerTracking", loginIDParameter);
        }
    
        public virtual ObjectResult<SP_GetBookPlanningDetails_Result> SP_GetBookPlanningDetails(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetBookPlanningDetails_Result>("SP_GetBookPlanningDetails", iDParameter);
        }
    
        public virtual ObjectResult<SP_GetBooks_CompletedPercentage_Result> SP_GetBooks_CompletedPercentage(Nullable<int> loginID)
        {
            var loginIDParameter = loginID.HasValue ?
                new ObjectParameter("LoginID", loginID) :
                new ObjectParameter("LoginID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetBooks_CompletedPercentage_Result>("SP_GetBooks_CompletedPercentage", loginIDParameter);
        }
    
        public virtual ObjectResult<SP_GetBookWorkFlowInfo_Result> SP_GetBookWorkFlowInfo(Nullable<int> bookID, Nullable<int> workFlowID)
        {
            var bookIDParameter = bookID.HasValue ?
                new ObjectParameter("BookID", bookID) :
                new ObjectParameter("BookID", typeof(int));
    
            var workFlowIDParameter = workFlowID.HasValue ?
                new ObjectParameter("WorkFlowID", workFlowID) :
                new ObjectParameter("WorkFlowID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetBookWorkFlowInfo_Result>("SP_GetBookWorkFlowInfo", bookIDParameter, workFlowIDParameter);
        }
    
        public virtual ObjectResult<SP_GetCommentsHelpDesk_Result> SP_GetCommentsHelpDesk(Nullable<int> tID)
        {
            var tIDParameter = tID.HasValue ?
                new ObjectParameter("tID", tID) :
                new ObjectParameter("tID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetCommentsHelpDesk_Result>("SP_GetCommentsHelpDesk", tIDParameter);
        }
    
        public virtual ObjectResult<sp_GetDashBoard_BooksSummaryCount_Result> sp_GetDashBoard_BooksSummaryCount(Nullable<int> loginID)
        {
            var loginIDParameter = loginID.HasValue ?
                new ObjectParameter("LoginID", loginID) :
                new ObjectParameter("LoginID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetDashBoard_BooksSummaryCount_Result>("sp_GetDashBoard_BooksSummaryCount", loginIDParameter);
        }
    
        public virtual ObjectResult<SP_GetEmailList_QueryTo_Result> SP_GetEmailList_QueryTo(string catalog, Nullable<int> loginID)
        {
            var catalogParameter = catalog != null ?
                new ObjectParameter("Catalog", catalog) :
                new ObjectParameter("Catalog", typeof(string));
    
            var loginIDParameter = loginID.HasValue ?
                new ObjectParameter("LoginID", loginID) :
                new ObjectParameter("LoginID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetEmailList_QueryTo_Result>("SP_GetEmailList_QueryTo", catalogParameter, loginIDParameter);
        }
    
        public virtual ObjectResult<SP_GetEmailToChapter_Result> SP_GetEmailToChapter(Nullable<int> bookID, string emailTo)
        {
            var bookIDParameter = bookID.HasValue ?
                new ObjectParameter("BookID", bookID) :
                new ObjectParameter("BookID", typeof(int));
    
            var emailToParameter = emailTo != null ?
                new ObjectParameter("EmailTo", emailTo) :
                new ObjectParameter("EmailTo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetEmailToChapter_Result>("SP_GetEmailToChapter", bookIDParameter, emailToParameter);
        }
    
        public virtual ObjectResult<SP_GetFeedbackData_Result> SP_GetFeedbackData(Nullable<int> loginID)
        {
            var loginIDParameter = loginID.HasValue ?
                new ObjectParameter("LoginID", loginID) :
                new ObjectParameter("LoginID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetFeedbackData_Result>("SP_GetFeedbackData", loginIDParameter);
        }
    
        public virtual ObjectResult<SP_GetFilterOption_List_Result> SP_GetFilterOption_List(Nullable<int> loginID)
        {
            var loginIDParameter = loginID.HasValue ?
                new ObjectParameter("LoginID", loginID) :
                new ObjectParameter("LoginID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetFilterOption_List_Result>("SP_GetFilterOption_List", loginIDParameter);
        }
    
        public virtual ObjectResult<SP_GetFreelanceAllocationChapter_Result> SP_GetFreelanceAllocationChapter(Nullable<int> bookID, Nullable<int> taskID, string viewType)
        {
            var bookIDParameter = bookID.HasValue ?
                new ObjectParameter("BookID", bookID) :
                new ObjectParameter("BookID", typeof(int));
    
            var taskIDParameter = taskID.HasValue ?
                new ObjectParameter("TaskID", taskID) :
                new ObjectParameter("TaskID", typeof(int));
    
            var viewTypeParameter = viewType != null ?
                new ObjectParameter("ViewType", viewType) :
                new ObjectParameter("ViewType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetFreelanceAllocationChapter_Result>("SP_GetFreelanceAllocationChapter", bookIDParameter, taskIDParameter, viewTypeParameter);
        }
    
        public virtual ObjectResult<SP_GetFreelanceAllocationData_Result> SP_GetFreelanceAllocationData(Nullable<int> loginID, string viewType)
        {
            var loginIDParameter = loginID.HasValue ?
                new ObjectParameter("LoginID", loginID) :
                new ObjectParameter("LoginID", typeof(int));
    
            var viewTypeParameter = viewType != null ?
                new ObjectParameter("ViewType", viewType) :
                new ObjectParameter("ViewType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetFreelanceAllocationData_Result>("SP_GetFreelanceAllocationData", loginIDParameter, viewTypeParameter);
        }
    
        public virtual ObjectResult<SP_GetFreelanceBookTracking_Result> SP_GetFreelanceBookTracking(Nullable<int> loginID)
        {
            var loginIDParameter = loginID.HasValue ?
                new ObjectParameter("LoginID", loginID) :
                new ObjectParameter("LoginID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetFreelanceBookTracking_Result>("SP_GetFreelanceBookTracking", loginIDParameter);
        }
    
        public virtual ObjectResult<SP_GetFreelancer_DashboardCount_Result> SP_GetFreelancer_DashboardCount(Nullable<int> freelancerID)
        {
            var freelancerIDParameter = freelancerID.HasValue ?
                new ObjectParameter("FreelancerID", freelancerID) :
                new ObjectParameter("FreelancerID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetFreelancer_DashboardCount_Result>("SP_GetFreelancer_DashboardCount", freelancerIDParameter);
        }
    
        public virtual ObjectResult<sp_GetFreelancer_InboxList_Result> sp_GetFreelancer_InboxList(Nullable<int> freelancerID)
        {
            var freelancerIDParameter = freelancerID.HasValue ?
                new ObjectParameter("FreelancerID", freelancerID) :
                new ObjectParameter("FreelancerID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetFreelancer_InboxList_Result>("sp_GetFreelancer_InboxList", freelancerIDParameter);
        }
    
        public virtual ObjectResult<sp_GetFreelancer_Invoice_Result> sp_GetFreelancer_Invoice(Nullable<int> freelancerID)
        {
            var freelancerIDParameter = freelancerID.HasValue ?
                new ObjectParameter("FreelancerID", freelancerID) :
                new ObjectParameter("FreelancerID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetFreelancer_Invoice_Result>("sp_GetFreelancer_Invoice", freelancerIDParameter);
        }
    
        public virtual ObjectResult<sp_GetFreelancer_Report_Result> sp_GetFreelancer_Report(Nullable<int> freelancerID)
        {
            var freelancerIDParameter = freelancerID.HasValue ?
                new ObjectParameter("FreelancerID", freelancerID) :
                new ObjectParameter("FreelancerID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetFreelancer_Report_Result>("sp_GetFreelancer_Report", freelancerIDParameter);
        }
    
        public virtual ObjectResult<SP_GetFreelancer_UploadedSummary_Result> SP_GetFreelancer_UploadedSummary(Nullable<int> freelancerID)
        {
            var freelancerIDParameter = freelancerID.HasValue ?
                new ObjectParameter("FreelancerID", freelancerID) :
                new ObjectParameter("FreelancerID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetFreelancer_UploadedSummary_Result>("SP_GetFreelancer_UploadedSummary", freelancerIDParameter);
        }
    
        public virtual ObjectResult<sp_GetFreelancerMaster_List_Result> sp_GetFreelancerMaster_List()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetFreelancerMaster_List_Result>("sp_GetFreelancerMaster_List");
        }
    
        public virtual ObjectResult<SP_GetFreelancerofSelection_Result> SP_GetFreelancerofSelection(Nullable<int> bookID, Nullable<int> taskID)
        {
            var bookIDParameter = bookID.HasValue ?
                new ObjectParameter("BookID", bookID) :
                new ObjectParameter("BookID", typeof(int));
    
            var taskIDParameter = taskID.HasValue ?
                new ObjectParameter("TaskID", taskID) :
                new ObjectParameter("TaskID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetFreelancerofSelection_Result>("SP_GetFreelancerofSelection", bookIDParameter, taskIDParameter);
        }
    
        public virtual ObjectResult<SP_GetFreelancerSubMaster_UploadFileList_Result> SP_GetFreelancerSubMaster_UploadFileList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetFreelancerSubMaster_UploadFileList_Result>("SP_GetFreelancerSubMaster_UploadFileList");
        }
    
        public virtual ObjectResult<SP_GetFreelanceSelectionData_Result> SP_GetFreelanceSelectionData(Nullable<int> loginID)
        {
            var loginIDParameter = loginID.HasValue ?
                new ObjectParameter("LoginID", loginID) :
                new ObjectParameter("LoginID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetFreelanceSelectionData_Result>("SP_GetFreelanceSelectionData", loginIDParameter);
        }
    
        public virtual ObjectResult<SP_GetFreelanceSelectionList_Result> SP_GetFreelanceSelectionList(Nullable<int> taskID)
        {
            var taskIDParameter = taskID.HasValue ?
                new ObjectParameter("TaskID", taskID) :
                new ObjectParameter("TaskID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetFreelanceSelectionList_Result>("SP_GetFreelanceSelectionList", taskIDParameter);
        }
    
        public virtual ObjectResult<SP_GetHelpDeskdata_All_Result> SP_GetHelpDeskdata_All(string tStatus)
        {
            var tStatusParameter = tStatus != null ?
                new ObjectParameter("tStatus", tStatus) :
                new ObjectParameter("tStatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetHelpDeskdata_All_Result>("SP_GetHelpDeskdata_All", tStatusParameter);
        }
    
        public virtual ObjectResult<SP_GetHelpdeskDetailsbyID_Result> SP_GetHelpdeskDetailsbyID(Nullable<int> userID, string tStatus)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(int));
    
            var tStatusParameter = tStatus != null ?
                new ObjectParameter("tStatus", tStatus) :
                new ObjectParameter("tStatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetHelpdeskDetailsbyID_Result>("SP_GetHelpdeskDetailsbyID", userIDParameter, tStatusParameter);
        }
    
        public virtual ObjectResult<SP_GetInstructionData_Result> SP_GetInstructionData(Nullable<int> loginID)
        {
            var loginIDParameter = loginID.HasValue ?
                new ObjectParameter("LoginID", loginID) :
                new ObjectParameter("LoginID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetInstructionData_Result>("SP_GetInstructionData", loginIDParameter);
        }
    
        public virtual ObjectResult<SP_GetMailContentForQuery_Result> SP_GetMailContentForQuery(string catalog)
        {
            var catalogParameter = catalog != null ?
                new ObjectParameter("catalog", catalog) :
                new ObjectParameter("catalog", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetMailContentForQuery_Result>("SP_GetMailContentForQuery", catalogParameter);
        }
    
        public virtual ObjectResult<SP_GetNewBookList_Result> SP_GetNewBookList(Nullable<int> loginID)
        {
            var loginIDParameter = loginID.HasValue ?
                new ObjectParameter("LoginID", loginID) :
                new ObjectParameter("LoginID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetNewBookList_Result>("SP_GetNewBookList", loginIDParameter);
        }
    
        public virtual ObjectResult<SP_GetNofification_ToDo_List_Result> SP_GetNofification_ToDo_List(Nullable<int> loginID)
        {
            var loginIDParameter = loginID.HasValue ?
                new ObjectParameter("LoginID", loginID) :
                new ObjectParameter("LoginID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetNofification_ToDo_List_Result>("SP_GetNofification_ToDo_List", loginIDParameter);
        }
    
        public virtual ObjectResult<SP_GetOOFHistory_Result> SP_GetOOFHistory(Nullable<int> loginID, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var loginIDParameter = loginID.HasValue ?
                new ObjectParameter("LoginID", loginID) :
                new ObjectParameter("LoginID", typeof(int));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetOOFHistory_Result>("SP_GetOOFHistory", loginIDParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<SP_GetPM_PE_List_Result> SP_GetPM_PE_List(string listType)
        {
            var listTypeParameter = listType != null ?
                new ObjectParameter("ListType", listType) :
                new ObjectParameter("ListType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetPM_PE_List_Result>("SP_GetPM_PE_List", listTypeParameter);
        }
    
        public virtual ObjectResult<SP_GetProgress_WIP_Result> SP_GetProgress_WIP(Nullable<int> loginID)
        {
            var loginIDParameter = loginID.HasValue ?
                new ObjectParameter("LoginID", loginID) :
                new ObjectParameter("LoginID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetProgress_WIP_Result>("SP_GetProgress_WIP", loginIDParameter);
        }
    
        public virtual ObjectResult<string> SP_GetProjectPlan_beforeupdate(Nullable<System.DateTime> date, string changeDays)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            var changeDaysParameter = changeDays != null ?
                new ObjectParameter("ChangeDays", changeDays) :
                new ObjectParameter("ChangeDays", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_GetProjectPlan_beforeupdate", dateParameter, changeDaysParameter);
        }
    
        public virtual ObjectResult<SP_GetProjectPlan_List_FOR_API_Result> SP_GetProjectPlan_List_FOR_API()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetProjectPlan_List_FOR_API_Result>("SP_GetProjectPlan_List_FOR_API");
        }
    
        public virtual ObjectResult<SP_GetProjectPlan_UpdatedList_Result> SP_GetProjectPlan_UpdatedList(Nullable<int> planID)
        {
            var planIDParameter = planID.HasValue ?
                new ObjectParameter("PlanID", planID) :
                new ObjectParameter("PlanID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetProjectPlan_UpdatedList_Result>("SP_GetProjectPlan_UpdatedList", planIDParameter);
        }
    
        public virtual ObjectResult<SP_GetProjectPlan_UpdatedList_New_Result> SP_GetProjectPlan_UpdatedList_New(Nullable<int> planID, Nullable<int> sequence, Nullable<System.DateTime> date)
        {
            var planIDParameter = planID.HasValue ?
                new ObjectParameter("PlanID", planID) :
                new ObjectParameter("PlanID", typeof(int));
    
            var sequenceParameter = sequence.HasValue ?
                new ObjectParameter("Sequence", sequence) :
                new ObjectParameter("Sequence", typeof(int));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetProjectPlan_UpdatedList_New_Result>("SP_GetProjectPlan_UpdatedList_New", planIDParameter, sequenceParameter, dateParameter);
        }
    
        public virtual ObjectResult<SP_GetProjectPlan_UpdatedList_Newdays_Result> SP_GetProjectPlan_UpdatedList_Newdays(Nullable<int> planID, Nullable<int> sequence, Nullable<int> changeDays, Nullable<System.DateTime> date)
        {
            var planIDParameter = planID.HasValue ?
                new ObjectParameter("PlanID", planID) :
                new ObjectParameter("PlanID", typeof(int));
    
            var sequenceParameter = sequence.HasValue ?
                new ObjectParameter("Sequence", sequence) :
                new ObjectParameter("Sequence", typeof(int));
    
            var changeDaysParameter = changeDays.HasValue ?
                new ObjectParameter("ChangeDays", changeDays) :
                new ObjectParameter("ChangeDays", typeof(int));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetProjectPlan_UpdatedList_Newdays_Result>("SP_GetProjectPlan_UpdatedList_Newdays", planIDParameter, sequenceParameter, changeDaysParameter, dateParameter);
        }
    
        public virtual ObjectResult<SP_GetProofTrackingData_Result> SP_GetProofTrackingData(Nullable<int> bookID, string stage, string uType)
        {
            var bookIDParameter = bookID.HasValue ?
                new ObjectParameter("BookID", bookID) :
                new ObjectParameter("BookID", typeof(int));
    
            var stageParameter = stage != null ?
                new ObjectParameter("Stage", stage) :
                new ObjectParameter("Stage", typeof(string));
    
            var uTypeParameter = uType != null ?
                new ObjectParameter("UType", uType) :
                new ObjectParameter("UType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetProofTrackingData_Result>("SP_GetProofTrackingData", bookIDParameter, stageParameter, uTypeParameter);
        }
    
        public virtual ObjectResult<SP_GetQueryCatalogChapterList_Result> SP_GetQueryCatalogChapterList(Nullable<int> loginID, string userType, string emailID)
        {
            var loginIDParameter = loginID.HasValue ?
                new ObjectParameter("LoginID", loginID) :
                new ObjectParameter("LoginID", typeof(int));
    
            var userTypeParameter = userType != null ?
                new ObjectParameter("UserType", userType) :
                new ObjectParameter("UserType", typeof(string));
    
            var emailIDParameter = emailID != null ?
                new ObjectParameter("EmailID", emailID) :
                new ObjectParameter("EmailID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetQueryCatalogChapterList_Result>("SP_GetQueryCatalogChapterList", loginIDParameter, userTypeParameter, emailIDParameter);
        }
    
        public virtual ObjectResult<SP_GetQueryData_Result> SP_GetQueryData(Nullable<int> loginID)
        {
            var loginIDParameter = loginID.HasValue ?
                new ObjectParameter("LoginID", loginID) :
                new ObjectParameter("LoginID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetQueryData_Result>("SP_GetQueryData", loginIDParameter);
        }
    
        public virtual ObjectResult<SP_GetQueryTemplateData_Result> SP_GetQueryTemplateData()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetQueryTemplateData_Result>("SP_GetQueryTemplateData");
        }
    
        public virtual ObjectResult<SP_GetStagewiseChapter_Result> SP_GetStagewiseChapter(Nullable<int> bookID, string stage)
        {
            var bookIDParameter = bookID.HasValue ?
                new ObjectParameter("BookID", bookID) :
                new ObjectParameter("BookID", typeof(int));
    
            var stageParameter = stage != null ?
                new ObjectParameter("Stage", stage) :
                new ObjectParameter("Stage", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetStagewiseChapter_Result>("SP_GetStagewiseChapter", bookIDParameter, stageParameter);
        }
    
        public virtual ObjectResult<SP_GetSurveyMailDetails_Result> SP_GetSurveyMailDetails(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetSurveyMailDetails_Result>("SP_GetSurveyMailDetails", iDParameter);
        }
    
        public virtual ObjectResult<SP_GetSurveyResponseData_Result> SP_GetSurveyResponseData(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetSurveyResponseData_Result>("SP_GetSurveyResponseData", iDParameter);
        }
    
        public virtual ObjectResult<SP_GetTaskDueDateList_ForNotification_Result> SP_GetTaskDueDateList_ForNotification(Nullable<int> loginID)
        {
            var loginIDParameter = loginID.HasValue ?
                new ObjectParameter("LoginID", loginID) :
                new ObjectParameter("LoginID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetTaskDueDateList_ForNotification_Result>("SP_GetTaskDueDateList_ForNotification", loginIDParameter);
        }
    
        public virtual ObjectResult<SP_GetTaskList_Activity_Result> SP_GetTaskList_Activity(Nullable<int> loginID)
        {
            var loginIDParameter = loginID.HasValue ?
                new ObjectParameter("LoginID", loginID) :
                new ObjectParameter("LoginID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetTaskList_Activity_Result>("SP_GetTaskList_Activity", loginIDParameter);
        }
    
        public virtual ObjectResult<SP_GetTaskNotifications_Result> SP_GetTaskNotifications(Nullable<int> loginID)
        {
            var loginIDParameter = loginID.HasValue ?
                new ObjectParameter("LoginID", loginID) :
                new ObjectParameter("LoginID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetTaskNotifications_Result>("SP_GetTaskNotifications", loginIDParameter);
        }
    
        public virtual ObjectResult<SP_GetTemplateList_Result> SP_GetTemplateList(string catlog)
        {
            var catlogParameter = catlog != null ?
                new ObjectParameter("catlog", catlog) :
                new ObjectParameter("catlog", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetTemplateList_Result>("SP_GetTemplateList", catlogParameter);
        }
    
        public virtual ObjectResult<SP_GetTicketDetailsByTicketID_Result> SP_GetTicketDetailsByTicketID(Nullable<int> ticketID, Nullable<int> iD)
        {
            var ticketIDParameter = ticketID.HasValue ?
                new ObjectParameter("ticketID", ticketID) :
                new ObjectParameter("ticketID", typeof(int));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetTicketDetailsByTicketID_Result>("SP_GetTicketDetailsByTicketID", ticketIDParameter, iDParameter);
        }
    
        public virtual ObjectResult<SP_GetWISH_Book_ActivityList_Result> SP_GetWISH_Book_ActivityList(Nullable<int> loginID, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var loginIDParameter = loginID.HasValue ?
                new ObjectParameter("LoginID", loginID) :
                new ObjectParameter("LoginID", typeof(int));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetWISH_Book_ActivityList_Result>("SP_GetWISH_Book_ActivityList", loginIDParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<SP_GetWISH_BookList_Result> SP_GetWISH_BookList(Nullable<int> loginID, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var loginIDParameter = loginID.HasValue ?
                new ObjectParameter("LoginID", loginID) :
                new ObjectParameter("LoginID", typeof(int));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetWISH_BookList_Result>("SP_GetWISH_BookList", loginIDParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<SP_GetWorkFlow_List_Result> SP_GetWorkFlow_List()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetWorkFlow_List_Result>("SP_GetWorkFlow_List");
        }
    
        public virtual ObjectResult<sp_GetWorkflowList_ByBookID_Result> sp_GetWorkflowList_ByBookID(Nullable<int> bookID)
        {
            var bookIDParameter = bookID.HasValue ?
                new ObjectParameter("BookID", bookID) :
                new ObjectParameter("BookID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetWorkflowList_ByBookID_Result>("sp_GetWorkflowList_ByBookID", bookIDParameter);
        }
    
        public virtual ObjectResult<sp_GetWorkFlowMaster_Result> sp_GetWorkFlowMaster(Nullable<int> workFlowID)
        {
            var workFlowIDParameter = workFlowID.HasValue ?
                new ObjectParameter("WorkFlowID", workFlowID) :
                new ObjectParameter("WorkFlowID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetWorkFlowMaster_Result>("sp_GetWorkFlowMaster", workFlowIDParameter);
        }
    
        public virtual int SP_ProjectPlan_Activity_CompletionDate_Update(Nullable<int> bookID)
        {
            var bookIDParameter = bookID.HasValue ?
                new ObjectParameter("BookID", bookID) :
                new ObjectParameter("BookID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ProjectPlan_Activity_CompletionDate_Update", bookIDParameter);
        }
    
        public virtual ObjectResult<SP_ProjectPlanList_Result> SP_ProjectPlanList(string publisher, Nullable<int> loginID)
        {
            var publisherParameter = publisher != null ?
                new ObjectParameter("Publisher", publisher) :
                new ObjectParameter("Publisher", typeof(string));
    
            var loginIDParameter = loginID.HasValue ?
                new ObjectParameter("LoginID", loginID) :
                new ObjectParameter("LoginID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ProjectPlanList_Result>("SP_ProjectPlanList", publisherParameter, loginIDParameter);
        }
    
        public virtual int SP_UpdateData_FromAPI(string queryString, string clientID)
        {
            var queryStringParameter = queryString != null ?
                new ObjectParameter("QueryString", queryString) :
                new ObjectParameter("QueryString", typeof(string));
    
            var clientIDParameter = clientID != null ?
                new ObjectParameter("ClientID", clientID) :
                new ObjectParameter("ClientID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_UpdateData_FromAPI", queryStringParameter, clientIDParameter);
        }
    
        public virtual ObjectResult<SP_WeeklyReport_Result> SP_WeeklyReport(Nullable<int> bookID)
        {
            var bookIDParameter = bookID.HasValue ?
                new ObjectParameter("BookID", bookID) :
                new ObjectParameter("BookID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_WeeklyReport_Result>("SP_WeeklyReport", bookIDParameter);
        }
    
        [DbFunction("WMSEntities", "SplitStrings_XML")]
        public virtual IQueryable<string> SplitStrings_XML(string list, string delimiter)
        {
            var listParameter = list != null ?
                new ObjectParameter("List", list) :
                new ObjectParameter("List", typeof(string));
    
            var delimiterParameter = delimiter != null ?
                new ObjectParameter("Delimiter", delimiter) :
                new ObjectParameter("Delimiter", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<string>("[WMSEntities].[SplitStrings_XML](@List, @Delimiter)", listParameter, delimiterParameter);
        }
    
        public virtual ObjectResult<SP_UserLogin_Result> SP_UserLogin(string loginID, string password)
        {
            var loginIDParameter = loginID != null ?
                new ObjectParameter("LoginID", loginID) :
                new ObjectParameter("LoginID", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_UserLogin_Result>("SP_UserLogin", loginIDParameter, passwordParameter);
        }
    
        public virtual ObjectResult<SP_GetBook_Current_Status_Result> SP_GetBook_Current_Status(Nullable<int> bookID)
        {
            var bookIDParameter = bookID.HasValue ?
                new ObjectParameter("BookID", bookID) :
                new ObjectParameter("BookID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetBook_Current_Status_Result>("SP_GetBook_Current_Status", bookIDParameter);
        }
    
        public virtual ObjectResult<SP_GetCurrentBookStatusWithUser_Result> SP_GetCurrentBookStatusWithUser(Nullable<int> bookId)
        {
            var bookIdParameter = bookId.HasValue ?
                new ObjectParameter("BookId", bookId) :
                new ObjectParameter("BookId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetCurrentBookStatusWithUser_Result>("SP_GetCurrentBookStatusWithUser", bookIdParameter);
        }
    
        public virtual ObjectResult<SP_GetQueryTrackingData_Result> SP_GetQueryTrackingData(Nullable<int> loginID)
        {
            var loginIDParameter = loginID.HasValue ?
                new ObjectParameter("LoginID", loginID) :
                new ObjectParameter("LoginID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetQueryTrackingData_Result>("SP_GetQueryTrackingData", loginIDParameter);
        }
    
        public virtual ObjectResult<SP_GetQueryConversationData_Result> SP_GetQueryConversationData(Nullable<int> queryID)
        {
            var queryIDParameter = queryID.HasValue ?
                new ObjectParameter("QueryID", queryID) :
                new ObjectParameter("QueryID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetQueryConversationData_Result>("SP_GetQueryConversationData", queryIDParameter);
        }
    
        public virtual ObjectResult<SP_GetFreelancerActivities_Result> SP_GetFreelancerActivities(Nullable<int> loginID)
        {
            var loginIDParameter = loginID.HasValue ?
                new ObjectParameter("LoginID", loginID) :
                new ObjectParameter("LoginID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetFreelancerActivities_Result>("SP_GetFreelancerActivities", loginIDParameter);
        }
    }
}
